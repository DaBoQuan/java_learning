<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ page import="com.eweaver.base.BaseContext"%>
<%
String requestid = request.getParameter("requestid");

 %>
<html>
<head>
<title>运费清帐装卸暂估明细</title>
<%@ include file="/base/init.jsp"%>
<script src='/dwr/interface/DataService.js'></script>
<SCRIPT type=text/javascript src="/dwr/engine.js"></SCRIPT>
<style type="text/css">
	.x-toolbar table {
		width: 0
	}
	a {
		color: blue;
		cursor: pointer;
	}
	#pagemenubar table {
		width: 0
	}
	.x-panel-btns-ct {
		padding: 0px;
	}
	.x-panel-btns-ct table {
		width: 0
	}
</style>
</head>
<body>
<div id="divSearch">
<div id="pagemenubar"></div>
<form action="" id="EweaverForm" name="EweaverForm" method="post">
</form>
</div>
</body>
<script type="text/javascript">
var ds;
Ext.onReady(function(){
    Ext.QuickTips.init();
    Ext.BLANK_IMAGE_URL = "/js/ext/resources/images/default/s.gif";
    Ext.LoadMask.prototype.msg = "加载...";
    
	var title = ["装卸计划编号","暂估单号", "合并开票原则", "暂估金额", "未税金额", "费用类型", "暂估凭证号", "装卸日期","主线路名称"];

    ds = new Ext.data.Store({
        proxy: new Ext.data.HttpProxy({
            url: "/app/trade/reportAction.jsp?action=getunlodingList&requestid=<%=requestid%>"
        }),
		timeout: 900000,
        reader: new Ext.data.JsonReader({
            totalProperty: "totalProperty",
            root: "root"
        }, [{
            name: "loadplanno"
        }, {
            name: "invoiceno"
        }, {
            name: "principle"
        }, {
            name: "amount"
        }, {
            name: "notaxamount"
        },  {
            name: "feetype"
        }, {
            name: "voucherno"
        }, {
            name: "createdate"
        }, {
            name: "linecode"
        }, {
        	name: "flagid"
        }]),
        remoteSort: true
    });
   // ds.setDefaultSort("sno", "asc");
	
    var sm = new Ext.grid.RowSelectionModel({
        selectRow: Ext.emptyFn
    });
	
    var cm = new Ext.grid.ColumnModel([{
        header: title[0],
        dataIndex: "loadplanno",
        width:170,
        sortable: true
    }, {
        header: title[1],
        dataIndex: "invoiceno",
        width:150,
        sortable: true
    }, {
        header: title[2],
        dataIndex: "principle",
        width:160,
        sortable: true,
        renderer: function(value){
          value = SQL(value);
          return value;
        }
    },{
        header: title[3],
        dataIndex: "amount",
        width:120,
        sortable: true
    },{
        header: title[4],
        dataIndex: "notaxamount",
        width:120,
        sortable: true
    },{
        header: title[5],
        dataIndex: "feetype",
        width:150,
        sortable: true
    },{
        header: title[6],
        dataIndex: "voucherno",
        width:150,
        sortable: true
    },{
        header: title[7],
        dataIndex: "createdate",
        width:150,
        sortable: true
    },{
        header: title[8],
        dataIndex: "linecode",
        width:160,
        sortable: true
    }]);
	cm.defaultSortable = true;
	
    var grid = new Ext.grid.GridPanel({
        region: "center",
        cm: cm,
        ds: ds,
        loadMask: true,
        trackMouseOver: false,
        viewConfig: {
            forceFit: false,
            enableRowBody: true,
            sortAscText: "升序",
            sortDescText: "降序",
            columnsText: "列定义",
            getRowClass: function(record, rowIndex, p, store){
                return "x-grid3-row-collapsed";
            }
        },
        bbar: new Ext.PagingToolbar({
            pageSize: 20,
            store: ds,
            displayInfo: true,
            beforePageText: "第",
            afterPageText: "页/{0}",
            firstText: "第一页",
            prevText: "上页",
            nextText: "下页",
            lastText: "最后页",
            displayMsg: "显示 {0} - {1}条记录 / {2}",
            emptyMsg: "没有结果返回"
        })
    });
    
    var viewport = new Ext.Viewport({
        layout: "border",
        items: [{
            region: "north",
            autoScroll: true,
            contentEl: "divSearch",
            split: true,
            collapseMode: "mini"
        }, grid]
    });
	
    ds.load({
        params: {
            start: 0,
            limit: 20
        },
        callback: function(){
        	//amountsum();
        }
    });
    
	grid.addListener('cellclick', function (grid, rowIndex, columnIndex, event) {
		var rs = grid.getSelectionModel().getSelected();;
		var flagid = rs.get("flagid");
		var ds = parent.document.frames["freightdetail"].ds;
		ds.load({
	        params: {
	            start: 0,
	            limit: 20,
	            flagid: flagid
	        }
	    });
	});
	
	ds.on('load',function(){
		amountsum();
	});
    
});
function SQL(param){
	var retval;
	DWREngine.setAsync(false);   
	var sql = "select objname from selectitem where id ='"+param+"'"; 
	DataService.getValue(sql,function(data){  
  		retval = data;
	}); 
  	return retval;
}
function amountsum(){
	var rowCount = ds.getCount();
	var p = new Ext.data.Record({ fields:['amount','notaxamount']});
	var amount_sum = 0;
	var notaxamount_sum = 0;
	ds.each(function(record) {
		if(record.data.amount!=null){
			amount_sum += Number(record.data.amount);
			notaxamount_sum += Number(record.data.notaxamount);
		}
	});
	amount_sum = amount_sum.toFixed(2);
	notaxamount_sum = notaxamount_sum.toFixed(2);
	p.set('amount', amount_sum);
	p.set('notaxamount', notaxamount_sum);
	ds.add(p);
}
</script>
</html>